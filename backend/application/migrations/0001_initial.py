# Generated by Django 5.1.1 on 2024-10-12 11:40

import django.contrib.postgres.fields
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("setting", "0007_alter_datasource_datasource_name_and_more"),
        ("user", "0003_alter_user_password"),
    ]

    operations = [
        migrations.CreateModel(
            name="Application",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid1,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                        verbose_name="主键id",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="应用名称")),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="应用描述"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "creator",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user.user",
                        verbose_name="创建人",
                    ),
                ),
                (
                    "datasource",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="setting.datasource",
                        verbose_name="数据源",
                    ),
                ),
                (
                    "model",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="setting.model",
                        verbose_name="模型",
                    ),
                ),
            ],
            options={
                "db_table": "application",
            },
        ),
        migrations.CreateModel(
            name="ApplicationAccessToken",
            fields=[
                (
                    "application",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="application.application",
                        verbose_name="应用id",
                    ),
                ),
                (
                    "access_token",
                    models.CharField(
                        max_length=128,
                        unique=True,
                        verbose_name="用户公开访问 认证token",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="是否开启公开访问"),
                ),
                (
                    "access_num",
                    models.IntegerField(default=100, verbose_name="访问次数"),
                ),
                (
                    "white_active",
                    models.BooleanField(default=False, verbose_name="是否开启白名单"),
                ),
                (
                    "white_list",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(blank=True, max_length=128),
                        default=list,
                        size=None,
                        verbose_name="白名单列表",
                    ),
                ),
            ],
            options={
                "db_table": "application_access_token",
            },
        ),
    ]
